<style lang="less">
  .container{
    background: #fff;
  }
  .cate-nav{
    position: fixed;
    left:0;
    top:0;
    z-index: 1000;
  }

  .cate-nav-body{
    height: 84rpx;
    white-space: nowrap;
    background: #fff;
    border-top: 1px solid rgba(0,0,0,.15);
    overflow: hidden;
  }

  .cate-nav .item{
    display: inline-block;
    height: 84rpx;
    min-width: 130rpx;
    padding: 0 15rpx;
  }

  .cate-nav .item .name{
    display: block;
    height: 84rpx;
    padding: 0 20rpx;
    line-height: 84rpx;
    color: #333;
    font-size: 30rpx;
    width: auto;
    position: relative;
  }

  .cate-nav .item .name .yuan{background: #ab2b2b;color:#fff;font-size:12px;width:14px;height:14px;line-height:14px;border-radius: 50%;top:3px;right:0;position: absolute;text-align: center;}

  .cate-nav .item.active .name{
    color: #ab2b2b;
    border-bottom: 2px solid #ab2b2b;
  }

  .cate-item{
    margin-top: 94rpx;
    height: auto;
    overflow: hidden;
  }

  .cate-item .h{
    height: 145rpx;
    width: 750rpx;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .cate-item .h .name{
    display: block;
    height: 35rpx;
    margin-bottom: 18rpx;
    font-size: 30rpx;
    color: #333;
  }

  .cate-item .h .desc{
    display: block;
    height: 24rpx;
    font-size: 24rpx;
    color: #999;
  }

  .cate-item .b{
    width: 750rpx;
    padding: 0 6.25rpx;
    height: auto;
    overflow: hidden;
  }

  .cate-item .b .item{
    float: left;
    background: #fff;
    width: 365rpx;
    margin-bottom: 6.25rpx;
    padding-bottom: 33.333rpx;
    height: auto;
    overflow: hidden;
    text-align: center;
    position: relative;;
  }

  .cate-item .b .item .iconfont{position: absolute;right:40rpx;top:10rpx;color:#fff;font-size:60rpx;}
  .cate-item .b .item .icon-roundcheckfill{color:#b4282d;}
  .cate-item .b .item-b{
    margin-left: 6.25rpx;
  }

  .cate-item .item .img{
    width: 302rpx;
    height: 302rpx;
  }

  .cate-item .item .name{
    display: block;
    width: 302rpx;
    height: 35rpx;
    margin: 11.5rpx auto 22rpx auto;
    text-align: left;
    overflow: hidden;
    font-size: 30rpx;
    color: #333;
  }

  .cate-item .item .name text:first-child{float:left;}
  .cate-item .item .name text:last-child{float:right;}

  .cate-item .item .price{
    display: block;
    width: 302rpx;
    margin:0 auto;
    height: 30rpx;
    text-align: left;
  }
  .cate-item .item .price text{font-size: 30rpx;color: #b4282d;}
  .cate-item .item .price text:first-child{float:left;}
  .cate-item .item .price text:last-child{float:right;}

  .bottom-btn .r{
    background: #b4282d;
    display: block;
    height: 80rpx;
    width:100%;
    line-height: 80rpx;
    text-align: center;
    color: #fff;
  }

  .bottom-btn{
    position: fixed;
    left:0;
    bottom:0;
    z-index: 1000;
    width: 750rpx;
    height: 80rpx;
    background: #fff;
  }

</style>
<template>

  <view class="container">

    <view class="cate-nav">
      <scroll-view scroll-x="true" class="cate-nav-body" style="width: 750rpx;" scroll-left="{{scrollLeft}}">
        <view  wx:for="{{navList}}" wx:key="item.t_id" class="item {{ xm_type == item.t_name ? 'active' : ''}}" data-id="{{item.t_name}}" data-index="{{index}}" bindtap="switchCate">
          <view class="name">{{item.t_name}}<view class="yuan" wx:if="{{item.selectedList.length>0}}">{{item.selectedList.length}}</view></view>
        </view>
      </scroll-view>
    </view>


    <scroll-view scroll-y="true" scroll-top="{{scrollTop}}" style="height:{{scrollHeight}};" style="margin-top:16rpx;">

      <view class="cate-item">
        <view class="b">
          <view class="item {{(iindex + 1) % 2 == 0 ? 'item-b' : ''}}"  wx:for="{{goodsList}}" wx:key="iitem.xm_id" wx:for-item="iitem" wx:for-index="iindex" @tap="xuanze({{iindex}})">
            <image class="img" src="{{iitem.xm_img1}}" background-size="cover"></image>
            <view class="name"><text>{{iitem.xm_biaoti}}</text><text>{{iitem.xm_shichang}}分钟</text></view>
            <view class="price"><text>￥{{iitem.xm_xianjia}}</text> <text>已售{{iitem.xm_yishou}}件</text></view>

            <text class="iconfont icon-roundcheckfill" wx:if="{{iitem.selected}}"></text>
            <text class="iconfont icon-roundcheck" wx:if="{{!iitem.selected}}"></text>

          </view>
        </view>
      </view>
    </scroll-view>
  </view>

  <view class="bottom-btn">
    <view class="r" @tap="tijiao">选好了(支持多选)</view>
  </view>

</template>

<script>
  import wepy from 'wepy'
  import util from '../../utils/util.js'
  import api from '../../config/api.js'

  export default class Category extends wepy.page {
    config = {
    }
    data = {
      // text:"这是一个页面"
      navList: [],
      goodsList: [],
      id: 0,
      jishi_id:0,
      name:'',
      navIndex:0,
      currentCategory: {},
      scrollLeft: 0,
      scrollTop: 0,
      xm_type: "",
      allMoney:0,
      proName:[],
      scrollHeight: 0,
      page: 1,
      size: 10000
    }
    async onLoad(options) {
      // 页面初始化 options为页面跳转所带来的参数

      console.log(options);
      if(options.jishi_id)
      {
        this.jishi_id= parseInt(options.jishi_id);
        this.name= options.name;
      }


      if (options.id) {
        this.id = parseInt(options.id)
      }
      try {
        let res = await wepy.getSystemInfo()
        if (res) {
          this.scrollHeight = res.windowHeight
        }
      } catch (e) {}
      await this.getCategoryInfo();
      await this.getGoodsList();
    }
    methods = {
      tijiao(){

        console.log(this.allMoney);
        console.log(this.proName.join());

        wx.navigateTo({
          url: "/pages/ucenter/maidan?money="+this.allMoney+"&jishi_id="+this.jishi_id+"&name="+this.name+"&pro_name="+this.proName.join()
        })


      },
      xuanze(index)
      {
        console.log(index);
        console.log(this.navIndex);
        var navArray=this.navList[this.navIndex];

        if(!navArray.selectedList)
        {
          console.log("数组");
          navArray.selectedList=[];
        }

        if(this.goodsList[index].selected)
        {
          this.goodsList[index].selected=false;
          this.allMoney=parseFloat(this.allMoney)-parseFloat(this.goodsList[index].xm_xianjia);


          var indexValue = navArray.selectedList.indexOf(this.goodsList[index].xm_id);
          if (indexValue > -1) {
            navArray.selectedList.splice(indexValue, 1);
          }

          var indexName = this.proName.indexOf(this.goodsList[index].xm_biaoti);
          if (indexName > -1) {
            navArray.selectedList.splice(indexValue, 1);
            this.proName.splice(indexName,1);
          }



        }
        else
        {
          this.allMoney=parseFloat(this.allMoney)+parseFloat(this.goodsList[index].xm_xianjia);
          console.log(this.proName);
          this.proName.push(this.goodsList[index].xm_biaoti);
          this.goodsList[index].selected=true;
          navArray.selectedList.push(this.goodsList[index].xm_id);
        }


        console.log("####"+this.proName);


      },

      async switchCate (event) {
    if (this.xm_type === event.currentTarget.dataset.id)
  {
    return false
  }

  this.navIndex=event.currentTarget.dataset.index;
  var clientX = event.detail.x
  var currentTarget = event.currentTarget
  if (clientX < 60) {
    this.scrollLeft = currentTarget.offsetLeft - 60
  } else if (clientX > 330) {
    this.scrollLeft = currentTarget.offsetLeft
  }
  this.xm_type = event.currentTarget.dataset.id;
  await this.getGoodsList()
  this.$apply()

  }
  }
  async getCategoryInfo () {
    let res = await util.request(api.GoodsCategory, {id: this.id})
    if (res.errno === 0) {
      this.navList = res.data;
      if(!this.xm_type)
      {
        this.xm_type = res.data[0].t_name;
      }
      // nav位置
      let currentIndex = 0
      let navListCount = this.navList.length
      for (let i = 0; i < navListCount; i++) {
        currentIndex += 1
        if (this.navList[i].id === this.id) {
          break
        }
      }
      if (currentIndex > navListCount / 2 && navListCount > 5) {
        this.scrollLeft = currentIndex * 60
      }
      this.$apply()

    }
  }
  async getGoodsList () {
    let res = await util.request(api.GoodsList, {categoryId: this.xm_type, page: this.page, size: this.size})
    if (res.data) {
      this.goodsList = res.data;
      var navArray=this.navList[this.navIndex];
      if(!navArray.selectedList)
      {
        navArray.selectedList=[];
      }
      for(var i=0;i<this.goodsList.length;i++)
      {
        for(var j=0;j<navArray.selectedList.length;j++)
        {
          if(navArray.selectedList[j]==this.goodsList[i].xm_id)
          {
            this.goodsList[i].selected=true;
          }
        }
      }

      this.$apply()
    }
  }
  }
</script>
